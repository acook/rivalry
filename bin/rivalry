#!/usr/bin/env ruby

require 'find'
require 'pathname'
require 'pry'

class Pathname
  alias_method :each, :each_child
  alias_method :exists?, :exist?
end

def usage
  puts "usage: #{$0} path/to/search/for/duplicates"
  exit 1
end

def scan pathname
  size  = 0
  files = []

  pathname.find do |path|
    file = Pathname.new path

    if file.directory? then
      if skip?(file)
        puts "-- SKIPPING: #{file}" if $verbose
        Find.prune
      end
    elsif valid? file then
      files << file
      size += file.size
    end
  end

  puts "-- Size  : #{humanize size}"
  puts "-- Count : #{files.length} files"
  files
end

def run path
  files = scan Pathname.new(path)
  files.each do |file|
    #puts file.to_s
  end
end

def skip? path
  [
    File.basename(path) == ?.,
    path.to_s.split(File::Separator).last =~ ignores[:scm]
  ].find{|i| i} && true
end

def invalid? file
  !(valid? file)
end

def valid? file
  file.exists?
end

def ignores
  {
    scm: /(\.git|\.hg|\.svn)/
  }
end

BYTE_UNITS =[[1073741824, "GB"], [1048576, "MB"], [1024, "KB"], [1, "B"], [-1, 'B']]

def humanize bytes
  unit = BYTE_UNITS.find{|u| bytes > u[0] }
  "#{bytes / unit[0]} #{unit[1]}"
end

path = ARGV.first || usage

run path
